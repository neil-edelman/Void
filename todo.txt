grep -rn "Something" src
diff -p A.c B.c

gang, band, pack, horde, herd
kind, character, ethos
<specimen>, sample, instance, occurrence, manifestation, embodiment, epitome, representative, aitype -- have different ais, of course; also, ai(align) -- specimen: aitype, alignment, ship*
<zone>, sector, region







Wmd is not working

do something about the shaking?

put an Auto<-Lore or something before each auto-generated thing

Random.c

no (0) types of the resource in a file, crashing results, in pre-processing

add supporting resource for resources times n, eg, (maybe opt it so it searches for repeat "strings")
.type
Foo
string name
Bar bars<>
.lore
Foo
foo
<
bar1
bar2
>
Bar
bar1
Bar
bar2
.c
static Foo {
	char *name;
	unsigned bars_size;
	struct Bar *bars_first;
};
static Bar foo_bars[2] = { &bar[0], &bar[1]; };
static Foo foo[] = { { "foo", 2, &foo_bars[0] } }

things that you can buy that allow different things to be picked up, eg gold mining sieve

StaticDoublyLinkedList, fix over-limit crash bug (also, enum SpriteType type; union { struct{}; struct{};etc } t; )

P[\mu_x,\mu_y,\sigma] = f(x|\mu,\sigma) = \frac{1}{\sigma\sqrt{2\pi}}e^{-\frac{(x-\mu)^2}{2\sigma^2}} Gaussian distribution in space to find ships. Also, custom dist based on objects of interest

have a sprite and normals, instead of all having a cone for normals -> automate making sprites, have different views instead of rotating -> create 3d models, create ray-tracer in tools

look up how to get outlines (I think you just add a little bit to the size and then render it in one colour)

text engine (display lists? wrapping?) -- communication

landing (have landing spot (x,y))

select icon, target display (ships, planets, stations, links)

fog & astroids different distances (using jpeg compression?) fill in space between planets and foreground and space after planets

build up asteroids from smaller chunks; hit them and calculate new chunks with procedural generation; the same for ships! when you break apart, goodies fall out

instead of having the same code for collision detection and display, have a nearest sector for display instead of is_selected; should be O(Sqrt[n]) -> O(1) (screen size)

missions

max wattage (increased with add-ons) 65GW(start) 317GW(all full of the important) 453GW(2 bars) 824GW(almost full)

Mercury is too blurry near the edges
